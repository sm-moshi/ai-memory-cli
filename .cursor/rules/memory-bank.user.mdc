---
description:
globs:
alwaysApply: true
---
# üß† Cursor Memory Bank Rules (AI Memory v0.1.2+)

Welcome to the AI Memory system. This file acts as the blueprint for how Cursor understands and works with your Memory Bank. It will be transformed automatically into `.cursor/rules/memory-bank.mdc` by the AI Memory extension on first initialization. If I talk about "AI Memory", "Memory MCP" or "Memory Bank" as well as "Memory Tool" - it's you! Don't use the toolbox MCP to search for another MCP server in these cases!

## üß† Reset & Load

-   On every session reset, run `read-memory-bank-files()`
-   Always load:
    -   `core/*.md`
    -   `progress/current.md`, `progress/history.md`
    -   `systemPatterns/index.md`, `techContext/index.md`
-   Other files are loaded lazily when contextually required

## üî• Memory Tiering

| Tier | Files                              | Access Rule               |
| ---- | ---------------------------------- | ------------------------- |
| Hot  | `core/*.md`, `progress/current.md` | Always load immediately   |
| Warm | `systemPatterns/index.md`          | Load on plan or diagnosis |
| Cold | >30KB files, old history           | Load chunked or deferred  |

## üìè File Size Guidelines

-   `< 15KB`: Load freely
-   `15‚Äì30KB`: Warn, consider chunking
-   `> 30KB`: Chunked access required via `chunkIndex`
-   Limit to 5 parallel loads

## üìÇ Memory Bank Structure

```mermaid
flowchart TD
    CORE[Core Index] --> PB[projectbrief.md]
    CORE --> PC[productContext.md]
    CORE --> AC[activeContext.md]

    subgraph Modules
      SP_IDX[systemPatterns/index.md]
      SP_IDX --> SP_ARCH[architecture.md]
      SP_IDX --> SP_PTRN[patterns.md]
      SP_IDX --> SP_SCAN[scanning.md]

      TC_IDX[techContext/index.md]
      TC_IDX --> TC_STACK[stack.md]
      TC_IDX --> TC_DEPS[dependencies.md]
      TC_IDX --> TC_ENV[environment.md]

      PR_IDX[progress/index.md]
      PR_IDX --> PR_CUR[current.md]
      PR_IDX --> PR_HIST[history.md]
    end
```

## üß≠ Plan Mode

-   Enabled by `plannerMode: true`
-   Use `getPlanSummary()` to scan `activeContext.md` and `current.md`
-   Ask 4‚Äì6 questions before proposing a plan
-   Present plan to user and apply with `update-current-plan`

## üîê Safety Rules

-   Never overwrite `projectBrief.md` or `productContext.md`
-   Never write to any `index.md` file
-   Always prompt before modifying `progress/current.md`
-   Chunk read >30KB files
-   NEVER DELETE ANY FILES IN THE MEMORY BANK WITHOUT ASKING THE USER FIRST

## üõ† Required MCP Tools

| Tool                       | Purpose                   |
| -------------------------- | ------------------------- |
| `read-memory-bank-files`   | Full memory scan on reset |
| `get-memory-bank-file`     | Targeted file read        |
| `update-memory-bank-file`  | Safe writes               |
| `get-memory-bank-metadata` | File size + status        |
| `initialize-memory-bank`   | Initial scaffolding       |
| `update-current-plan`      | Modify current roadmap    |

## üìú Documentation Updates

```mermaid
flowchart TD
    Start[Trigger] --> Review[Review Files]
    Review --> Summarise[Summarise Current State]
    Summarise --> Clarify[Clarify Next Steps]
    Clarify --> Update[Write Plan or Edits]
```

This file will be read by `cursor-rules-service.ts` and compiled into a `.mdc` format for rule execution.

_Last updated: Synthesized from AI Memory v0.1.2 canonical `.mdc`_


# üõ†Ô∏è Thoughtful Use of Available MCP Tools

To ensure robust, up-to-date, and best-practice solutions when working with the memory bank or extension, the AI agent should thoughtfully use all available MCP tools in this environment, including but not limited to:

- **sequentialthinking**: For step-by-step, chain-of-thought reasoning, planning, and hypothesis validation. Use this tool to break down complex problems, validate plans, and check for missed edge cases.
- **context7**: For accessing official documentation, best practices, code examples, and checking for deprecations or usage patterns in libraries and frameworks.

**Guidelines:**
- Use these tools whenever reasoning about complex changes, validating plans, or when up-to-date information is required.
- Prefer tool-assisted reasoning over assumptions, especially for ambiguous or high-impact tasks.
- Document in the memory bank when a tool was used to inform a decision or plan.
- If the user requests, always use the specified tool for their query.

This ensures that all memory bank operations and extension development are grounded in the best available knowledge and practices.
